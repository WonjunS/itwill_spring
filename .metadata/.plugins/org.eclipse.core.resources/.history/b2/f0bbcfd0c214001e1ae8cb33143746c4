package com.itwill.spring3.web;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.itwill.spring3.dto.PostCreateDto;
import com.itwill.spring3.dto.PostUpdateDto;
import com.itwill.spring3.repository.post.Post;
import com.itwill.spring3.service.PostService;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequiredArgsConstructor
@Controller
@RequestMapping("/post")
public class PostController {
    
    private final PostService postService;
    
    @GetMapping
    public String read(Model model) {
        log.info("read()");
        
        // 포스트 목록 검색
        List<Post> list = postService.read();
        
        // Model에 검색 결과를 세팅:
        model.addAttribute("posts", list);
        
        return "/post/read";
    }
    
    @GetMapping("/create")
    public void create() {
        log.info("create()");
    }
    
    @PostMapping("/create")
    public String create(PostCreateDto dto) {
        log.info("create(dto={})", dto);
        
        // form에서 submit(제출)된 내용을 DB 테이블에 insert
        postService.create(dto);
        
        // DB 테이블 insert 후 포스트 목록 페이지로 이동
        return "redirect:/post";
    }
    
    @GetMapping({"/details", "/modify"})
    public void read(Long id, Model model) {
        log.info("read(id={})", id);
        
        Post post = postService.read(id);
        
        model.addAttribute("post", post);
    }
    
    @PostMapping("/modify")
    public String modify(Long id, PostUpdateDto dto) {
        postService.modify(id, dto);
        
        return "redirect:/post";
    }
    
    @PostMapping("/delete")
    public String delete(Long id) {
        postService.delete(id);
        
        return "redirect:/post";
    }
    
}
